For user of data an time dialog boxes looks at
ApiDemo/View/DataWidgets/Dialog code in DataWidgets1 
/----------------------------------------------------------------------------

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:orientation="vertical">

    <LinearLayout android:layout_width="wrap_content"
            android:layout_height="wrap_content">
        <TextView id="@+android:id/dateDisplay"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/date_widgets_example_dateDisplay_text"/>
    </LinearLayout>

    <Button id="@+android:id/pickDate"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/date_widgets_example_pickDate_text"/>

    <Button id="@+android:id/pickTime"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/date_widgets_example_pickTime_text"/>

</LinearLayout>


/----------------------------------------------------------------------------
import android.app.DatePickerDialog;
import android.app.TimePickerDialog;

import java.util.Calendar;

/**
 * Basic example of using date and time widgets, including
 * {@link android.app.TimePickerDialog} and {@link android.widget.DatePicker}.
 */
public class DateWidgets1 extends Activity {

    // where we display the selected date and time
    private TextView mDateDisplay;

    // date and time
    private int mYear;
    private int mMonth;
    private int mDay;
    private int mHour;
    private int mMinute;


    @Override
    protected void onCreate(Bundle icicle) {
        super.onCreate(icicle);

        setContentView(R.layout.date_widgets_example_1);

        mDateDisplay = (TextView) findViewById(R.id.dateDisplay);

        Button pickDate = (Button) findViewById(R.id.pickDate);
        pickDate.setOnClickListener(new View.OnClickListener() {

            public void onClick(View v) {
                new DatePickerDialog(DateWidgets1.this,
                        mDateSetListener,
                        mYear, mMonth, mDay, Calendar.SUNDAY).show();
            }
        });

        Button pickTime = (Button) findViewById(R.id.pickTime);
        pickTime.setOnClickListener(new View.OnClickListener() {

            public void onClick(View v) {
                new TimePickerDialog(DateWidgets1.this,
                        mTimeSetListener, "Set the time",
                        mHour, mMinute, false).show();
            }
        });

        final Calendar c = Calendar.getInstance();
        mYear = c.get(Calendar.YEAR);
        mMonth = c.get(Calendar.MONTH);
        mDay = c.get(Calendar.DAY_OF_MONTH);
        mHour = c.get(Calendar.HOUR_OF_DAY);
        mMinute = c.get(Calendar.MINUTE);

        updateDisplay();
    }

    private void updateDisplay() {
        mDateDisplay.setText(
            new StringBuilder()
                    .append(mMonth).append("-")
                    .append(mDay).append("-")
                    .append(mYear).append(" ")
                    .append(pad(mHour)).append(":")
                    .append(pad(mMinute)));
    }

    private DatePicker.OnDateSetListener mDateSetListener =
            new DatePicker.OnDateSetListener() {

                public void dateSet(DatePicker view, int year, int monthOfYear,
                        int dayOfMonth) {
                    mYear = year;
                    mMonth = monthOfYear;
                    mDay = dayOfMonth;
                    updateDisplay();
                }
            };

    private TimePicker.OnTimeSetListener mTimeSetListener =
            new TimePicker.OnTimeSetListener() {

                public void timeSet(TimePicker view, int hourOfDay, int minute) {
                    mHour = hourOfDay;
                    mMinute = minute;
                    updateDisplay();
                }
            };

    private static String pad(int c) {
        if (c >= 10)
            return String.valueOf(c);
        else
            return "0" + String.valueOf(c);
    }

}
/----------------------------------------------------------------------------